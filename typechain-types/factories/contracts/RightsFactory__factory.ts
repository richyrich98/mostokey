/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RightsFactory,
  RightsFactoryInterface,
} from "../../contracts/RightsFactory";

const _abi = [
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CreatorWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "videoUrl",
        type: "string",
      },
    ],
    name: "TokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "videoUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "creatorEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getCreatorEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "soldTokens",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "videoUrl",
            type: "string",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct RightsFactory.TokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getTokensByCreator",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "purchaseTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "soldTokens",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "videoUrl",
        type: "string",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEarnings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000556124c0806100256000396000f3fe6080604052600436106200009d5760003560e01c8063804396af1162000060578063804396af146200017d578063b73c6ce914620001c6578063d5c7127514620001de578063e48603391462000203578063fa3c30a8146200023d57600080fd5b806302cdf56214620000a25780631f69565f14620000e457806322ea223114620001185780632a5c792a1462000131578063634282af1462000158575b600080fd5b348015620000af57600080fd5b50620000c7620000c136600462000ea8565b6200026e565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000f157600080fd5b50620001096200010336600462000f91565b62000531565b604051620000db919062000ffe565b6200012f6200012936600462001073565b62000678565b005b3480156200013e57600080fd5b5062000149620009b4565b604051620000db9190620010a0565b3480156200016557600080fd5b50620000c762000177366004620010ef565b62000a18565b3480156200018a57600080fd5b50620001b76200019c36600462000f91565b6001600160a01b031660009081526002602052604090205490565b604051908152602001620000db565b348015620001d357600080fd5b506200012f62000a43565b348015620001eb57600080fd5b5062000149620001fd36600462000f91565b62000b2c565b3480156200021057600080fd5b50620002286200022236600462000f91565b62000ce5565b604051620000db979695949392919062001109565b3480156200024a57600080fd5b50620001b76200025c36600462000f91565b60026020526000908152604090205481565b6000808511620002d15760405162461bcd60e51b815260206004820152602360248201527f546f74616c20737570706c79206d75737420626520677265617465722074686160448201526206e20360ec1b60648201526084015b60405180910390fd5b60008411620003325760405162461bcd60e51b815260206004820152602660248201527f50726963652070657220746f6b656e206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401620002c8565b6000835111620003855760405162461bcd60e51b815260206004820152601960248201527f566964656f2055524c2063616e6e6f7420626520656d707479000000000000006044820152606401620002c8565b60008787878686336040516200039b9062000def565b620003ac969594939291906200115e565b604051809103906000f080158015620003c9573d6000803e3d6000fd5b506040805160e0810182526001600160a01b038084168083523360208085019182528486018c8152606086018e815260006080880181815260a089018f8152600160c08b0181905297835294879052989020875181549088166001600160a01b031991821617825594519581018054969097169590941694909417909455925160028201559051600382015592516004840155519293508392909190600582019062000476908262001266565b5060c091909101516006909101805460ff1916911515919091179055600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0383169081179091556040513391907f9ade34b1f655a7207bafd54e7dc7f5b22ca1a72fce05912485c222ba3acb09c4906200051d908d908d908d908d908d9062001333565b60405180910390a398975050505050505050565b6040805160e08101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c08101919091526001600160a01b03808316600090815260016020818152604092839020835160e0810185528154861681529281015490941690820152600283015491810191909152600382015460608201526004820154608082015260058201805491929160a084019190620005d990620011d5565b80601f01602080910402602001604051908101604052809291908181526020018280546200060790620011d5565b8015620006585780601f106200062c5761010080835404028352916020019162000658565b820191906000526020600020905b8154815290600101906020018083116200063a57829003601f168201915b50505091835250506006919091015460ff16151560209091015292915050565b6200068262000dc4565b6001600160a01b0382166000908152600160205260409020600681015460ff16620006f05760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e206e6f7420666f756e64206f7220696e61637469766500000000006044820152606401620002c8565b60008211620007425760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401620002c8565b6000816004015482600301546200075a9190620013a0565b905080831115620007ae5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c6500000000006044820152606401620002c8565b6000826002015484620007c29190620013bc565b9050803410156200080d5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401620002c8565b83836004016000828254620008239190620013d6565b909155505060018301546001600160a01b03166000908152600260205260408120805483929062000856908490620013d6565b909155505060405163a9059cbb60e01b81523360048201526024810185905285906001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015620008ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d19190620013ec565b620009175760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401620002c8565b813411156200095b57336108fc620009308434620013a0565b6040518115909202916000818181858888f1935050505015801562000959573d6000803e3d6000fd5b505b60408051868152602081018490526001600160a01b0388169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a350505050620009b06001600055565b5050565b6060600380548060200260200160405190810160405280929190818152602001828054801562000a0e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620009ef575b5050505050905090565b6003818154811062000a2957600080fd5b6000918252602090912001546001600160a01b0316905081565b62000a4d62000dc4565b336000908152600260205260409020548062000aac5760405162461bcd60e51b815260206004820152601760248201527f4e6f206561726e696e677320746f2077697468647261770000000000000000006044820152606401620002c8565b336000818152600260205260408082208290555183156108fc0291849190818181858888f1935050505015801562000ae8573d6000803e3d6000fd5b5060405181815233907f957727802c31109adcff14fcfbd2dc576e9bfd4d6385ddd160fe42832a4555fe9060200160405180910390a25062000b2a6001600055565b565b60606000805b60035481101562000bae57836001600160a01b0316600160006003848154811062000b615762000b6162001410565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060010154160362000ba5578162000ba18162001426565b9250505b60010162000b32565b5060008167ffffffffffffffff81111562000bcd5762000bcd62000dfd565b60405190808252806020026020018201604052801562000bf7578160200160208202803683370190505b5090506000805b60035481101562000cdb57856001600160a01b0316600160006003848154811062000c2d5762000c2d62001410565b60009182526020808320909101546001600160a01b039081168452908301939093526040909101902060010154160362000cd2576003818154811062000c775762000c7762001410565b9060005260206000200160009054906101000a90046001600160a01b031683838151811062000caa5762000caa62001410565b6001600160a01b03909216602092830291909101909101528162000cce8162001426565b9250505b60010162000bfe565b5090949350505050565b60016020819052600091825260409091208054918101546002820154600383015460048401546005850180546001600160a01b03978816979095169593949293919262000d3290620011d5565b80601f016020809104026020016040519081016040528092919081815260200182805462000d6090620011d5565b801562000db15780601f1062000d855761010080835404028352916020019162000db1565b820191906000526020600020905b81548152906001019060200180831162000d9357829003601f168201915b5050506006909301549192505060ff1687565b60026000540362000de857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b611048806200144383390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262000e2557600080fd5b813567ffffffffffffffff8082111562000e435762000e4362000dfd565b604051601f8301601f19908116603f0116810190828211818310171562000e6e5762000e6e62000dfd565b8160405283815286602085880101111562000e8857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121562000ec257600080fd5b863567ffffffffffffffff8082111562000edb57600080fd5b62000ee98a838b0162000e13565b9750602089013591508082111562000f0057600080fd5b62000f0e8a838b0162000e13565b96506040890135955060608901359450608089013591508082111562000f3357600080fd5b62000f418a838b0162000e13565b935060a089013591508082111562000f5857600080fd5b5062000f6789828a0162000e13565b9150509295509295509295565b80356001600160a01b038116811462000f8c57600080fd5b919050565b60006020828403121562000fa457600080fd5b62000faf8262000f74565b9392505050565b6000815180845260005b8181101562000fde5760208185018101518683018201520162000fc0565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600060018060a01b03808451166020840152806020850151166040840152506040830151606083015260608301516080830152608083015160a083015260a083015160e060c08401526200105b61010084018262000fb6565b905060c0840151151560e08401528091505092915050565b600080604083850312156200108757600080fd5b620010928362000f74565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015620010e35783516001600160a01b031683529284019291840191600101620010bc565b50909695505050505050565b6000602082840312156200110257600080fd5b5035919050565b600060018060a01b03808a16835280891660208401525086604083015285606083015284608083015260e060a08301526200114860e083018562000fb6565b905082151560c083015298975050505050505050565b60c0815260006200117360c083018962000fb6565b828103602084015262001187818962000fb6565b90508660408401528281036060840152620011a3818762000fb6565b90508281036080840152620011b9818662000fb6565b91505060018060a01b03831660a0830152979650505050505050565b600181811c90821680620011ea57607f821691505b6020821081036200120b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562001261576000816000526020600020601f850160051c810160208610156200123c5750805b601f850160051c820191505b818110156200125d5782815560010162001248565b5050505b505050565b815167ffffffffffffffff81111562001283576200128362000dfd565b6200129b81620012948454620011d5565b8462001211565b602080601f831160018114620012d35760008415620012ba5750858301515b600019600386901b1c1916600185901b1785556200125d565b600085815260208120601f198616915b828110156200130457888601518255948401946001909101908401620012e3565b5085821015620013235787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a0815260006200134860a083018862000fb6565b82810360208401526200135c818862000fb6565b905085604084015284606084015282810360808401526200137e818562000fb6565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620013b657620013b66200138a565b92915050565b8082028115828204841417620013b657620013b66200138a565b80820180821115620013b657620013b66200138a565b600060208284031215620013ff57600080fd5b8151801515811462000faf57600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200143b576200143b6200138a565b506001019056fe60a06040523480156200001157600080fd5b506040516200104838038062001048833981016040819052620000349162000352565b85856003620000448382620004b7565b506004620000538282620004b7565b50600591506200006690508482620004b7565b506006620000758382620004b7565b50600780546001600160a01b0319166001600160a01b0383161790556080849052620000a23385620000f3565b806001600160a01b03167fc4dba32fa2b2db4394fdacb052e3de483dd8b7c1148feb2dea068f4272f76d758486604051620000df92919062000583565b60405180910390a2505050505050620005e8565b6001600160a01b038216620001235760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620001316000838362000135565b5050565b6001600160a01b03831662000164578060026000828254620001589190620005c0565b90915550620001d89050565b6001600160a01b03831660009081526020819052604090205481811015620001b95760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016200011a565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001f65760028054829003905562000215565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200025b91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200029b57818101518382015260200162000281565b50506000910152565b600082601f830112620002b657600080fd5b81516001600160401b0380821115620002d357620002d362000268565b604051601f8301601f19908116603f01168101908282118183101715620002fe57620002fe62000268565b816040528381528660208588010111156200031857600080fd5b6200032b8460208301602089016200027e565b9695505050505050565b80516001600160a01b03811681146200034d57600080fd5b919050565b60008060008060008060c087890312156200036c57600080fd5b86516001600160401b03808211156200038457600080fd5b620003928a838b01620002a4565b97506020890151915080821115620003a957600080fd5b620003b78a838b01620002a4565b9650604089015195506060890151915080821115620003d557600080fd5b620003e38a838b01620002a4565b94506080890151915080821115620003fa57600080fd5b506200040989828a01620002a4565b9250506200041a60a0880162000335565b90509295509295509295565b600181811c908216806200043b57607f821691505b6020821081036200045c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004b2576000816000526020600020601f850160051c810160208610156200048d5750805b601f850160051c820191505b81811015620004ae5782815560010162000499565b5050505b505050565b81516001600160401b03811115620004d357620004d362000268565b620004eb81620004e4845462000426565b8462000462565b602080601f8311600181146200052357600084156200050a5750858301515b600019600386901b1c1916600185901b178555620004ae565b600085815260208120601f198616915b82811015620005545788860151825594840194600190910190840162000533565b5085821015620005735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260008351806040840152620005a48160608501602088016200027e565b602083019390935250601f91909101601f191601606001919050565b80820180821115620005e257634e487b7160e01b600052601160045260246000fd5b92915050565b608051610a3d6200060b6000396000818161019801526103e40152610a3d6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806345b272d51161008c5780637a5b4f59116100665780637a5b4f59146101eb57806395d89b4114610203578063a9059cbb1461020b578063dd62ed3e1461021e57600080fd5b806345b272d51461019357806370a08231146101ba57806373c9fbe2146101e357600080fd5b8063095ea7b3116100c8578063095ea7b31461013c57806318160ddd1461015f57806323b872dd14610171578063313ce5671461018457600080fd5b806302d05d3f146100ef57806303ee438c1461011f57806306fdde0314610134575b600080fd5b600754610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610127610257565b6040516101169190610880565b6101276102e5565b61014f61014a3660046108b6565b610377565b6040519015158152602001610116565b6002545b604051908152602001610116565b61014f61017f3660046108e0565b610391565b60405160128152602001610116565b6101637f000000000000000000000000000000000000000000000000000000000000000081565b6101636101c836600461091c565b6001600160a01b031660009081526020819052604090205490565b6101276103b5565b6101f36103c2565b6040516101169493929190610937565b610127610529565b61014f6102193660046108b6565b610538565b61016361022c366004610979565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60068054610264906109ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610290906109ac565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b505050505081565b6060600380546102f4906109ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610320906109ac565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b5050505050905090565b600033610385818585610546565b60019150505b92915050565b60003361039f858285610558565b6103aa8585856105dc565b506001949350505050565b60058054610264906109ac565b60608060008060056006600760009054906101000a90046001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083805461040f906109ac565b80601f016020809104026020016040519081016040528092919081815260200182805461043b906109ac565b80156104885780601f1061045d57610100808354040283529160200191610488565b820191906000526020600020905b81548152906001019060200180831161046b57829003601f168201915b5050505050935082805461049b906109ac565b80601f01602080910402602001604051908101604052809291908181526020018280546104c7906109ac565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b50505050509250935093509350935090919293565b6060600480546102f4906109ac565b6000336103858185856105dc565b610553838383600161063b565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156105d657818110156105c757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6105d68484848403600061063b565b50505050565b6001600160a01b03831661060657604051634b637e8f60e11b8152600060048201526024016105be565b6001600160a01b0382166106305760405163ec442f0560e01b8152600060048201526024016105be565b610553838383610710565b6001600160a01b0384166106655760405163e602df0560e01b8152600060048201526024016105be565b6001600160a01b03831661068f57604051634a1406b160e11b8152600060048201526024016105be565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105d657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161070291815260200190565b60405180910390a350505050565b6001600160a01b03831661073b57806002600082825461073091906109e6565b909155506107ad9050565b6001600160a01b0383166000908152602081905260409020548181101561078e5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105be565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166107c9576002805482900390556107e8565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161082d91815260200190565b60405180910390a3505050565b6000815180845260005b8181101561086057602081850181015186830182015201610844565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610893602083018461083a565b9392505050565b80356001600160a01b03811681146108b157600080fd5b919050565b600080604083850312156108c957600080fd5b6108d28361089a565b946020939093013593505050565b6000806000606084860312156108f557600080fd5b6108fe8461089a565b925061090c6020850161089a565b9150604084013590509250925092565b60006020828403121561092e57600080fd5b6108938261089a565b60808152600061094a608083018761083a565b828103602084015261095c818761083a565b6001600160a01b0395909516604084015250506060015292915050565b6000806040838503121561098c57600080fd5b6109958361089a565b91506109a36020840161089a565b90509250929050565b600181811c908216806109c057607f821691505b6020821081036109e057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561038b57634e487b7160e01b600052601160045260246000fdfea264697066735822122022983a34c9d58d471c7b49386a09258a8c2b0c43e15e5b9baaf0a1ace870fac264736f6c63430008180033a26469706673582212207555d7b72108ad991441bbf7e3df3ac247126c6908798d37e60e12b380d5d9a664736f6c63430008180033";

type RightsFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RightsFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RightsFactory__factory extends ContractFactory {
  constructor(...args: RightsFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RightsFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RightsFactory__factory {
    return super.connect(runner) as RightsFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RightsFactoryInterface {
    return new Interface(_abi) as RightsFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RightsFactory {
    return new Contract(address, _abi, runner) as unknown as RightsFactory;
  }
}
